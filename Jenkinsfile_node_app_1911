pipeline {
    agent any

    triggers { 
        pollSCM('*/1 * * * *') 
    }

    stages {
        stage('build') {
            steps {
                echo "Building node app..."
            }
        }

        stage('deploy-dev') {
            steps {
                script {
                    deploy("DEV")
                }
            }
        }

        stage('test-dev') {
            steps {
                 script {
                    test("DEV")
                }
            }
        }

        stage('deploy-int') {
            steps {
                script {
                    deploy("INT")
                }
            }
        }

        stage('test-int') {
            steps {
                script {
                    test("INT")
                }
            }
        }

        stage('deploy-prod') {
            steps {
                script {
                    deploy("PROD")
                }
            }
        }

        stage('test-prod') {
            steps {
                script {
                    test("PROD")
                }
            }
        }
    }

    post { 
        always { 
            echo 'This will be always executed!'
        }

        success { 
            echo 'This will be executed on success!'
        }

        failure { 
            echo 'This will be executed on failure!'
        }
    }
}

def deploy(String environment){
    echo "Deploying on ${environment} environment..."
    // On this stage we would like to trigger one job
    //  trigger UI tests in pipeline defined before "dragan-ui-test"
    // that pipeline has parameters so we need to set it up as well 
    build job: "dragan-ui-test", 
        parameters: [string(name: 'ENVIRONMENT', value: "${environment}")] 
}

def test(String environment){
    echo "Testing on ${environment} environment..."
    //trigger executor container
    sh "docker run --network=host -d -t --name api_test_executor_${environment} api_test_executor"
    try {
    // execute specific comand for the running container
        sh "docker exec api_test_executor_${environment} cucumber --tags=@${environment} --format html --out test-output/report.html"
      }
    finally{
    // how to get report "docker cp" copy the files
    // from docker host to the source machine
         sh "docker cp api_test_executor_${environment}:/usr/src/api-tests/test-output/report.html report_${environment}.html"
    // kill the container
        sh "docker rm -f api_test_executor_${environment}"
        sh "ls"

    // to configure report we can check
    // jenkins plugins can be checked in the 
    // https://plugins.jenkins.io/ -> https://plugins.jenkins.io/htmlpublisher/

    // in order to generate report script for a given report option
    // visit http://localhost:8080/pipeline-syntax/
    // select your plugin
    // generate your snippet

    publishHTML(
        [
            allowMissing: false, 
            alwaysLinkToLastBuild: false, 
            keepAll: false, 
            reportDir: '', 
            reportFiles: "report_${environment}.html", 
            reportName: "Test Report ${environment}", 
            reportTitles: '', 
            useWrapperFileDirectly: true
        ])

        // in order to see the reports in the Jenkins
        // it is needed to https://stackoverflow.com/questions/52378579/jenkins-cant-view-image-in-html-report
        // or in the https://stackoverflow.com/questions/35783964/jenkins-html-publisher-plugin-no-css-is-displayed-when-report-is-viewed-in-j/35785788#35785788
    }
}
