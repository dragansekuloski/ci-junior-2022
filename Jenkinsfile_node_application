pipeline {
    agent any
    triggers { 
        pollSCM('*/1 * * * *') 
    }
    stages {
        stage('build') {
            steps {
                echo "Buildinh node application"
            }
        }

        stage('deploy-dev') {
            steps {
                deploy("DEV");
            }
        }

        stage('test-dev') {
            steps {
                 test("DEV");
            }
        }


        stage('deploy-int') {
            steps {
                deploy("INT");
            }
        }

        stage('test-int') {
            steps {
                 test("NT");
            }
        }

        stage('deploy-prod') {
            steps {
                 deploy("PROD");
            }
        }

        stage('test-prod') {
            steps {
                 test("PROD");
            }
        }
    }
}

def deploy(String envinronment){
    echo "Deployment on ${envinronment} environment triggered..."
    build job: "UI tests", parameters: [string(name: "ENVIRONMENT", value: "${envinronment}")]
}

def test(String environment){
    echo "Tests on ${environment} environmnt triggered.."
    sh "docker run --network=host -d -t --name api_tests_executor_${environment} api_test_executor"
    sh "docker exec api_tests_executor_${environment} cucumber --tags=@${environment} --format html --out test-output/report.html"
    sh "docker cp api_tests_executor_${environment}:/usr/src/api-tests/test-output/report.html report_${environment}.html"
    sh "docker rm -f api_tests_executor_${environment}"
}